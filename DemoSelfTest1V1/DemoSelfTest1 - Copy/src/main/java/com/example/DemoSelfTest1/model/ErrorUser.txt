//package com.example.DemoSelfTest1.model;
//
//import jakarta.persistence.*;
//import lombok.Getter;
//import lombok.Setter;
//import org.springframework.security.core.GrantedAuthority;
//import org.springframework.security.core.userdetails.UserDetails;
//
//import java.time.LocalDate;
//import java.time.LocalDateTime;
//import java.util.Collection;
//import java.util.List;
//
//@Entity
//@Table(name="users")
//@Getter
//@Setter
//public class User implements UserDetails {
//    //implement đến Class UserDetails để tích hợp thông tin User với Spring Security
//    @Id
//    @GeneratedValue(strategy = GenerationType.AUTO)
//    private Long id;
//
//    @Column(unique = true,nullable = false)
//    private String username;
//
//    @Column(unique = true,nullable = false)
//    private String email;
//
//    @Column(nullable = false)
//    private String password;
////    private boolean enabled;
//
//    @Column(name="verification_code")
//    private String verificationCode;
//
//    @Column(name="verification_expiration")
//    private LocalDateTime verificationCodeExpiresAt;
//    private boolean enabled;
//
//    public User(String username, String email, String password) {
//        this.username = username;
//        this.email = email;
//        this.password = password;
//    }
//
//    public User() {
//    }
//
//    @Override
//    /*
//    *   Đây là 1 method của interface UserDetails dùng để xác định các quyền mà người dùng trong app có
//    *   GrantedAuthority là một interface trong Spring Security, đại diện cho quyền hoặc vai trò của người dùng
//    *   Spring Security sử dụng danh sách quyền trả về từ hàm này để :
//    *       quyết định xem người dùng có được phép truy cập vào một tài nguyên nhất định hay không
//    *
//    *
//    */
//    public Collection<? extends GrantedAuthority> getAuthorities() {
//        return List.of();//Qli phân quyền , hàm này chưa xác thực đến vai trò
//
//    }
//
//
//    @Override
//    public String getUsername() {
//        return username; // Quan trọng! Phải có method này.
//    }
//
//    @Override
//    public String getPassword() {
//        return password;  // Trả về password
//    }
//
//    @Override
//    public boolean isAccountNonExpired(){
//        return true;
//    }
//
//    @Override
//    public boolean isAccountNonLocked() {
//        return true;
//    }
//
//    @Override
//    public boolean isCredentialsNonExpired() {
//        return true;
//    }
//
//    @Override
//    public boolean isEnabled() {
//
//        return enabled;
//    }
//}
//
